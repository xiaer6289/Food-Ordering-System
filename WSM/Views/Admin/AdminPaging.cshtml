@model X.PagedList.IPagedList<WSM.Models.Admin>
@using X.PagedList.Mvc.Core;
@using X.PagedList;

@{
    ViewData["Title"] = "Admin List";
    string currentSort = ViewData["CurrentSort"]?.ToString() ?? "";
}
<link rel="stylesheet" href="~/css/admin.css" />

<h2>Admin List</h2>

<!-- Success Message -->
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success text-center">
        @TempData["SuccessMessage"]
    </div>
}

<div class="mb-3">
    <a asp-action="CreateAdmin" class="btn btn-warning">Add New Admin</a>
</div>

<form asp-action="Admins" method="get" class="mb-3">
    <div class="input-group">
        <input name="searchString" class="form-control" placeholder="Search by name, email, or phone number" value="@ViewData["CurrentFilter"]" />
        <button type="submit" class="btn btn-warning">Search</button>
        @if (!string.IsNullOrEmpty(ViewData["CurrentFilter"]?.ToString()))
        {
            <a asp-action="Admins" class="btn btn-primary ms-2">Clear</a>
        }
    </div>
</form>

@if (!Model.Any())
{
    <p>No admins found.</p>
}
else
{
    <table class="table table-bordered table-hover">
        <thead class="table-dark">
            <tr>
                <th>
                    <a asp-action="Admins" asp-route-sortOrder="@ViewData["IdSortParm"]" asp-route-searchString="@ViewData["CurrentFilter"]" class="text-light">
                        Admin ID @(currentSort == "Id" ? "↑" : currentSort == "id_desc" ? "↓" : "")
                    </a>
                </th>
                <th>
                    <a asp-action="Admins" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-searchString="@ViewData["CurrentFilter"]" class="text-light">
                        Name @(currentSort == "" ? "↑" : currentSort == "name_desc" ? "↓" : "")
                    </a>
                </th>
                <th>Email</th>
                <th>Phone Number</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var admin in Model)
            {
                <tr>
                    <td>@admin.Id</td>
                    <td>@admin.Name</td>
                    <td>@admin.Email</td>
                    <td>@admin.PhoneNo</td>
                    <td>
                        <a asp-action="EditAdmin" asp-route-id="@admin.Id" class="btn btn-sm btn-warning">Edit</a>
                        <a asp-action="DeleteAdmin" asp-route-id="@admin.Id" class="btn btn-sm btn-danger delete-admin" data-admin-name="@admin.Name">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <!-- Pagination Control -->
    <div class="d-flex justify-content-center mt-4">
        @Html.PagedListPager(Model, page => Url.Action("Admins", new {
        pageNumber = page,
        searchString = ViewData["CurrentFilter"],
        sortOrder = ViewData["CurrentSort"]
        }), new PagedListRenderOptions
    {
        DisplayLinkToFirstPage = PagedListDisplayMode.Always,
        DisplayLinkToLastPage = PagedListDisplayMode.Always,
        DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
        DisplayLinkToNextPage = PagedListDisplayMode.Always,
        MaximumPageNumbersToDisplay = 5,
        UlElementClasses = new[] { "pagination" },
        LiElementClasses = new[] { "page-item" },
        PageClasses = new[] { "page-link" }
    })
</div>
}
