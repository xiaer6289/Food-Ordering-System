@using X.PagedList
@using X.PagedList.Mvc.Core
@model IPagedList<WSM.Models.OrderDetail>
@{
    ViewBag.Title = "Order History";
    string[] fields = ["Id", "Seat", "Total", "status", "Date", ""];
}

<div class="select-list">
@using (Html.BeginForm("OrderHistory", "OrderHistory"))
{
    @Html.DropDownList(
    "status",
    new List<SelectListItem>
    {
        new SelectListItem { Text = "Paid", Value = "Paid" },
        new SelectListItem { Text = "Pending", Value = "Pending" },
        new SelectListItem { Text = "Partially Refunded", Value = "Partially Refunded" },
        new SelectListItem { Text = "Refunded", Value = "Refunded" }
    },
    "------ All ------",
    new { @class="select-status", onchange = "this.form.submit()", @value = ViewBag.Status }
)

<form>
    @Html.Hidden("sort")
    @Html.Hidden("dir")
</form>

}
</div>

<p>
    @Model.Count() of @Model.TotalItemCount orders |
    Page @Model.PageNumber of @Model.PageCount
</p>



<div id="target">
    <table class="record-table">
        <tr>
            @foreach (var f in fields)
            {
                string d = "asc";
                string c = "";

                if (f == ViewBag.Sort)
                {
                    d = ViewBag.Dir == "des" ? "asc" : "des";
                    c = ViewBag.Dir;
                }

                <th>
                    <a href="?name=@ViewBag.Name&status=@ViewBag.Status&sort=@f&dir=@d" class="@c">@f</a>
                </th>
            }
        </tr>

        @foreach (var s in Model)
        {
            <tr>
                <td>@s.Id</td>
                <td>@s.SeatNo</td>
                <td>@s.TotalPrice</td>
                <td>@s.Status</td>
                <td>@s.OrderDate</td>
                <td>
                    <div class="detail-refund-btn">
                        <button class="history-detail-btn" data-get="/OrderHistory/Detail/@s.Id">Detail</button>
                        <button class="refund-page-btn" data-get="/OrderHistory/Refund/@s.Id">Refund</button>
                    </div>
                </td>
            </tr>
        }

    </table>

    @{
        var options = PagedListRenderOptions.ClassicPlusFirstAndLast;
        options.LinkToFirstPageFormat = "First";
        options.LinkToLastPageFormat = "Last";
        options.LinkToPreviousPageFormat = "Previous";
        options.LinkToNextPageFormat = "Next";

        var ajaxOptions = new AjaxOptions
        {
            HttpMethod = "get",
            UpdateTargetId = "target",
            LoadingElementId = "#loader",
        };
    }

    @Html.PagedListPager(
    Model,
    page => $"?name={ViewBag.Name}&sort={ViewBag.Sort}&dir={ViewBag.Dir}&page={page}",
    options
        )
</div> 