@using X.PagedList
@using X.PagedList.Mvc.Core
@model IPagedList<WSM.Models.CategoryVM>

@{
    ViewData["Title"] = "Category Management";
}

<h2 class="mb-4">Category Management</h2>

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger text-center">
        @TempData["ErrorMessage"]
    </div>
}

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success text-center">
        @TempData["SuccessMessage"]
    </div>
}


<form method="get">
    @Html.Hidden("sort")
    @Html.Hidden("dir")
</form>



<form method="post" asp-action="DeleteMany" asp-controller="Category" id="deleteForm">
    @Html.AntiForgeryToken()

    <div style="margin-bottom: 10px;">
        <button type="button" class="btn btn-primary check-all-btn">Check All</button>
        <button type="button" class="btn btn-secondary uncheck-all-btn">Uncheck All</button>
    </div>

    <p class="pagination-count">
        @Model.Count() of @Model.TotalItemCount Categories |
        Page @Model.PageNumber of @Model.PageCount
    </p>

    <div style="display: flex; align-items: flex-start; gap: 20px;">

        <table class="record-table">
            <thead>
                <tr>
                    <th></th>

                    @* Sort by Id *@
                    @{
                        string idDirection = (ViewBag.Sort == "Id" && ViewBag.Dir == "asc") ? "des" : "asc";
                        string idClass = (ViewBag.Sort == "Id") ? ViewBag.Dir : "";
                    }
                    <th>
                        <a href="?searchString=@ViewBag.Search&sort=Id&dir=@idDirection" class="@idClass">Id</a>
                    </th>

                    @* Sort by Name *@
                    @{
                        string nameDirection = (ViewBag.Sort == "Name" && ViewBag.Dir == "asc") ? "des" : "asc";
                        string nameClass = (ViewBag.Sort == "Name") ? ViewBag.Dir : "";
                    }
                    <th>
                        <a href="?searchString=@ViewBag.Search&sort=Name&dir=@nameDirection" class="@nameClass">Name</a>
                    </th>

                    <th>Actions</th>
                </tr>
            </thead>

            <tbody>
                @if (!Model.Any())
                {
                    <tr>
                        <td colspan="4" class="text-center">No categories found.</td>
                    </tr>
                }
                else
                {
                    @foreach (var category in Model)
                    {
                        <tr data-checkable data-id="@category.Id">
                            <td>
                                <input type="checkbox" name="ids" value="@category.Id" class="category-checkbox" />
                            </td>
                            <td>@category.Id</td>
                            <td>@category.Name</td>
                            <td>
                                <div class="edit-remove-group">
                                    <a asp-controller="Category" asp-action="EditCategory" asp-route-id="@category.Id" class="edit-ingredient">
                                        Edit
                                    </a>
                                    <button type="button" class="remove-ingredient delete-category btn btn-link"
                                            data-id="@category.Id">
                                        Delete
                                    </button>
                                </div>
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>

        <div class="restock-button">
            <a asp-controller="Category" asp-action="CreateCategory" class="create-ingredient">Add New Category</a>
            <button type="submit" class="remove-check-ingredient btn btn-danger">
                Delete Selected
            </button>
        </div>
    </div>
</form>

<div class="pagination-wrapper">
    @{
        var options = PagedListRenderOptions.ClassicPlusFirstAndLast;
        options.LinkToFirstPageFormat = "First";
        options.LinkToLastPageFormat = "Last";
        options.LinkToPreviousPageFormat = "Previous";
        options.LinkToNextPageFormat = "Next";
    }

    @Html.PagedListPager(
    Model,
    page => $"?searchString={ViewBag.Search}&sort={ViewBag.Sort}&dir={ViewBag.Dir}&page={page}",
    options
        )
</div>

@section Scripts {
<script>
    $(document).ready(function () {

        $('.check-all-btn').click(function () {
            $('.category-checkbox').prop('checked', true);
        });

        $('.uncheck-all-btn').click(function () {
            $('.category-checkbox').prop('checked', false);
        });

        $('.category-checkbox').change(function () {
            $(this).closest('tr').toggleClass('table-active', $(this).is(':checked'));
        });

        $('.delete-category').click(function () {
            var id = $(this).data('id');

            if (!confirm('Are you sure you want to delete this category?')) {
                return;
            }

            $.ajax({
                url: '@Url.Action("DeleteConfirmed", "Category")',
                type: 'POST',
                data: {
                    id: id,
                    __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                },
                success: function (response) {
                    if (response.success) {
                        alert(response.message);
                        location.reload();
                    } else {
                        alert(response.message);
                    }
                },
                error: function () {
                    alert('An unexpected error occurred while deleting the category.');
                }
            });
        });

        $('.remove-check-ingredient').click(function (e) {
            e.preventDefault();

            var selectedIds = [];
            $('.category-checkbox:checked').each(function () {
                selectedIds.push($(this).val());
            });

            if (selectedIds.length === 0) {
                alert('Please select at least one category to delete.');
                return;
            }

            if (!confirm('Are you sure you want to delete the selected categories?')) {
                return;
            }

            $.ajax({
                url: '@Url.Action("DeleteMany", "Category")',
                type: 'POST',
                traditional: true,
                data: {
                    ids: selectedIds,
                    __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                },
                success: function (response) {
                    if (response.success) {
                        alert(response.message);
                        location.reload();
                    } else {
                        alert(response.message);
                    }
                },
                error: function () {
                    alert('An unexpected error occurred while deleting the selected categories.');
                }
            });
        });
    });
</script>
}

